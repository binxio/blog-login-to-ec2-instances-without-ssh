#
# Copyright 2019 - binx.io B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
  AmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2'
  InstanceType:
    Type: String
    Default: t3.nano

Resources:
  Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      SubnetId: !Select [ 0, !Ref Subnets ]
      SecurityGroupIds: !Ref SecurityGroups
      Tags:
        - Key: Name
          Value: blog-aws-session-manager
      IamInstanceProfile: !Ref IamInstanceProfile

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'InstanceRole'

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM

  SessionManagerPreferences:
    Type: Custom::SSMDocument
    Properties:
      Name: SSM-SessionManagerRunShell
      DocumentType: Session
      Content: 
        schemaVersion: '1.0'
        description: Session Manager Preferences
        sessionType: Standard_Stream
        inputs:
          cloudWatchLogGroupName: ssm-sessions
          cloudWatchEncryptionEnabled: true
      ServiceToken: !GetAtt AWSSSMDocumentProvider.Arn

  SSMDocumentProvider:
    Type: AWS::Lambda::Function
      Handler: "index.handler"
      Timeout: 30
      Role: !GetAtt 'SSMDocumentProviderRole.Arn'
      Runtime: python3.6

  SSMDocumentProviderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: 'SSMDocumentProvider'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - ssm:CreateDocument
                  - ssm:UpdateDocument
                  - ssm:DeleteDocument
                Resource:
                  - '*'

Outputs:
  StartSessionCommand:
    Value: !Sub 'aws ssm start-session --target ${Instance}'
